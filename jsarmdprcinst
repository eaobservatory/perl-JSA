#!/bin/env starperl

=head1 NAME

jsarmdprcinst - Remove a recipe instance from CADC data processing

=head1 SYNSOPSIS

  jsarmdprcinst 14519 14245
  cat recinst.dat | jsarmdprcinst

=head1 DESCRIPTION

Given a recipe instance id or a set of recipe instance identifiers, either on the command
line or via a pipe, remove the corresponding entries from the dp_recipe_instance table and
also the dp_file_input table. Only takes the integer job number and not the hexadecimal
variant.

This command is not installed and is also not password protected. Use with care.

=head1 OPTIONS

=over 4

=item B<-help>

Print help information.

=item B<-man>

Print full manual.

=item B<-version>

Print version information.

=back

=cut

use strict;
use warnings;

use JAC::Setup qw/ sybase omp /;

use Getopt::Long;
use Pod::Usage;
use Term::ReadLine;

use JSA::Error qw/ :try /;
use JSA::CADC_DP qw/ connect_to_cadcdp disconnect_from_cadcdp
                     remove_recipe_instance /;

# Handle command-line options.
my ( $help, $man, $version );
my $status = GetOptions( "help"      => \$help,
                         "man"       => \$man,
                         "version"   => \$version,
                       );

pod2usage( 1 ) if $help;
pod2usage( -exitstatus => 0, -verbose => 2 ) if $man;

if( $version ) {
  print "Remove a job from the CADC GridEngine for JSA processing.\n";
  print " Source code revision: 0.01\n";
  exit;
}

my @recipe_instances;
if (@ARGV) {
  @recipe_instances = @ARGV;
} else {
  # Stdin should be readable
  my $rin = '';
  vec($rin,fileno(STDIN),1) = 1;
  my $nfound = select($rin,undef,undef,0.1);
  if ($nfound) {
    @recipe_instances = map { chomp; $_ } <>;
  }
}

die "No recipe instance ids supplied on command line or on STDIN\n"
  unless @recipe_instances;

# Paranoia. Do not let anything happen if the input does not look like an integer
my @bad;
for my $id (@recipe_instances) {
  if ( $id !~ /^\d+$/) {
    push(@bad, $id);
  }
}

if (@bad) {
  if (@bad == 1) {
    die "1 recipe instance id ($bad[0]) supplied to this command did not look like an integer\n";
  } else {
    die @bad . " recipe instance ids supplied to this command did not look like integers\n";
  }
}

print "Will be attempt to remove ". @recipe_instances . " recipe instance".
  (@recipe_instances > 1 ? "s" : "") . " from the database\n";

my $term = Term::ReadLine->new( "Recipe instance" );
my $cont = $term->readline(" Continue (y/n) [n]?" );
if ($cont !~ /^[Yy1]/) {
  print "Exiting\n";
  exit;
}

# Now talk to the database
my $dbh = connect_to_cadcdp;

try {
  remove_recipe_instance( $dbh, @recipe_instances );
} catch JSA::Error::CADCDB with {
  my $E = shift;
  print STDERR "Error in CADC connectivity: $E";
} otherwise {
  my $E = shift;
  print STDERR "$E\n";
};

disconnect_from_cadcdp( $dbh );


=head1 AUTHORS

Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2010-2011 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful,but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut
