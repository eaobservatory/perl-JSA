#!/usr/local/perl-5.8/bin/perl

eval 'exec perl  -S $0 ${1+"$@"}'
    if 0; # not running under some shell


=head1 NAME

dpCapture - Scan current dir looking for files suitable for ingestion

=head1 SYNOPSIS

  dpCapture --id="<instance id>" -persist -archive JCMT

=head1 DESCRIPTION

The CADC processing environment provides a command for ingesting files
into the CADC archive following processing by the wrapper script.  The
command written here is a compatibility version to allow the data
processing system to be tested outside of the CADC environment.

The compatibility version scans the current directory and reports
the names of files that would ordinarily be ingested.

In the future the -persist option would be used to then move
those files into a transfer directory.

All suitable looking files are reported, not just those that
may have existed prior to running the wrapper.

=head1 ARGUMENTS

=over 4

=item B<--archive>

Name of the archive to be used for ingestion. Ignored in this
implementation but should ordinarily be JCMT.

=item B<--id>

Unique execution ID generated by external user. This is a compatibility
option and is not used.

=item B<-persist>

Indicate that files should be "persisted". Does nothing at present.

=item B<-debug>

Write informational messages to standard error. Not supported by CADC.

=cut

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use File::Spec;
use Carp;

# Work out where we are so that we can run from a build directory
# and still find the JSA classes
use FindBin;
use lib $FindBin::RealBin."/lib";

use JSA::Files qw/ looks_like_cadcfile scan_dir /;

# Options
my ($help, $man, $version, $persist, $archive, $id, $debug);
my $status = GetOptions("help" => \$help,
                        "man" => \$man,
                        "version" => \$version,
                        "id=s" => \$id,
                        "archive=s" => \$archive,
                        "debug" => \$debug,
                        "persist" => \$persist,
                       );

pod2usage(1) if $help;
pod2usage(-exitstatus => 0, -verbose => 2) if $man;

if ($version) {
  my $id = '$Id: racover.pl 14421 2007-09-05 02:37:29Z agarwal $ ';
  print "dpCapture - compatibility capture script for jsawrapdr\n";
  print " Source code revision: $id\n";
  exit;
}

# Scan the directory for plausible fits files
my %files = scan_dir( qr/^jcmt.*\.fits$/ );
for my $f (sort keys %files) {
  if (looks_like_cadcfile( $f )) {
    print "\tWould ingest file $f\n";
  }
}


exit 0;

=head1 AUTHORS

Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>,

=head1 COPYRIGHT

Copyright (C) 2008 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place,Suite 330, Boston, MA  02111-1307, USA

=cut
